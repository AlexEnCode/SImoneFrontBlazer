@page "/"
@using MudBlazor
@inherits LayoutComponentBase

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<h1 style="display: flex; justify-content: center; align-items: center; color:#3b8382">
	Par ce qu'on ne laisse personne sur le coté !
</h1>


<div style="display: flex; justify-content: center; align-items: center;">
	<MudGrid style="width:50%; align-items: end;" Justify="Justify.SpaceAround">
		
			<MudItem>
				<MudAutocomplete T="string" Label="Depart" @bind-Value="value2" SearchFunc="@Search2"
								 ResetValueOnEmptyText="@resetValueOnEmptyText"
								 CoerceText="@coerceText" CoerceValue="@coerceValue"
								 AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />
			</MudItem>
			<MudItem>
				<MudAutocomplete T="string" Label="Destination" @bind-Value="value2" SearchFunc="@Search2"
								 ResetValueOnEmptyText="@resetValueOnEmptyText"
								 CoerceText="@coerceText" CoerceValue="@coerceValue"
								 AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />
			</MudItem>


			<MudItem>
				<MudDatePicker @bind-Date="date" />

			</MudItem>
			<MudItem>
				<MudButton Variant="Variant.Filled" Color="Color.Primary">Rechercher</MudButton>

			</MudItem>
		
	</MudGrid>
</div>


@code {
	DateTime? date = DateTime.Today;
	private bool resetValueOnEmptyText;
	private bool coerceText;
	private bool coerceValue;
	private string value1, value2;
	private string[] states =
	{
		"Alabama", "Alaska", "American Samoa", "Arizona",
		"Arkansas", "California", "Colorado", "Connecticut",
		"Delaware", "District of Columbia", "Federated States of Micronesia",
		"Florida", "Georgia", "Guam", "Hawaii", "Idaho",
		"Illinois", "Indiana", "Iowa", "Kansas", "Kentucky",
		"Louisiana", "Maine", "Marshall Islands", "Maryland",
		"Massachusetts", "Michigan", "Minnesota", "Mississippi",
		"Missouri", "Montana", "Nebraska", "Nevada",
		"New Hampshire", "New Jersey", "New Mexico", "New York",
		"North Carolina", "North Dakota", "Northern Mariana Islands", "Ohio",
		"Oklahoma", "Oregon", "Palau", "Pennsylvania", "Puerto Rico",
		"Rhode Island", "South Carolina", "South Dakota", "Tennessee",
		"Texas", "Utah", "Vermont", "Virgin Island", "Virginia",
		"Washington", "West Virginia", "Wisconsin", "Wyoming",
	};


	bool _drawerOpen = true;
	private readonly MudTheme _currentTheme = new()
		{
			Palette = new PaletteLight
			{
				Primary = "#3b8382",
			}
		};
	void DrawerToggle() => _drawerOpen = !_drawerOpen;


	private async Task<IEnumerable<string>> Search1(string value)
	{
		await Task.Delay(5);

		if (string.IsNullOrEmpty(value))
			return states;
		return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
	}

	private async Task<IEnumerable<string>> Search2(string value)
	{
		await Task.Delay(5);

		if (string.IsNullOrEmpty(value))
			return new string[0];
		return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
	}
}