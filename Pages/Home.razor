@page "/"
@using MudBlazor
@inherits LayoutComponentBase


<MudLayout>
    <MudImage Src="images/Banniere.png" style="width: 100%; height: auto; object-fit: cover; padding: 0; margin: 0;" />

    <div style="display: flex; justify-content: center; align-items: center;">
        <MudGrid style="width:50%; align-items: end; margin-top:5%" Justify="Justify.SpaceAround">

            <MudItem>
                <MudAutocomplete T="string" Label="Depart" @bind-Value="value2" SearchFunc="@Search2"
                                 ResetValueOnEmptyText="@resetValueOnEmptyText"
                                 CoerceText="@coerceText" CoerceValue="@coerceValue"
                                 AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />
            </MudItem>
            <MudItem>
                <MudAutocomplete T="string" Label="Destination" @bind-Value="value2" SearchFunc="@Search2"
                                 ResetValueOnEmptyText="@resetValueOnEmptyText"
                                 CoerceText="@coerceText" CoerceValue="@coerceValue"
                                 AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />
            </MudItem>


            <MudItem>
                <MudDatePicker @bind-Date="date" />

            </MudItem>
            <MudItem>
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Rechercher</MudButton>

            </MudItem>

        </MudGrid>
    </div>


  
    <MudGrid Justify="Justify.Center" Style="margin-top:5%">
        <MudItem xs="5" style="display: flex; justify-content: center; align-items: center;">
            <MudImage Src="images/RoadTripFace.png" />
        </MudItem>
        <MudItem xs="4" style=" justify-content: center; align-items: center;">
            <h3 style="color: #3b8382; margin-bottom: 5%;">Bénéficiez d’une Prime Covoiturage de 20 € avec Simone !</h3>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ac suscipit elit. Aliquam erat volutpat. Maecenas at tortor non libero congue consectetur. Maecenas ut quam nec nunc feugiat lacinia. Sed non ligula quis enim dictum vehicula. Sed nec sapien at nisi accumsan tempor. Nullam ut purus nec ipsum lacinia fermentum.
            </p>
        </MudItem>
    </MudGrid>
    <MudGrid Justify="Justify.Center" Style="margin-top:5%">
        <MudItem xs="4" style=" justify-content: center; align-items: center;">
            <h3 style="color: #3b8382; margin-bottom: 5%;">
                Recevez 5 € de bienvenue !
            </h3>
            <p>Suspendisse potenti. Ut auctor arcu nec augue luctus, in fringilla nisl fermentum. Nullam nec enim dapibus, tincidunt ligula eget, suscipit elit. Maecenas at tortor non libero congue consectetur. Maecenas ut quam nec nunc feugiat lacinia. </p>
        </MudItem>
        <MudItem xs="5" style="display: flex; justify-content: center; align-items: center;">
            <MudImage Src="images/Profil.png" />
        </MudItem>
    </MudGrid>


</MudLayout>


@code {
    DateTime? date = DateTime.Today;
    private bool resetValueOnEmptyText;
    private bool coerceText;
    private bool coerceValue;
    private string value1, value2;
    private string[] states =
    {
        "Alabama", "Alaska", "American Samoa", "Arizona",
        "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "District of Columbia", "Federated States of Micronesia",
        "Florida", "Georgia", "Guam", "Hawaii", "Idaho",
        "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky",
        "Louisiana", "Maine", "Marshall Islands", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada",
        "New Hampshire", "New Jersey", "New Mexico", "New York",
        "North Carolina", "North Dakota", "Northern Mariana Islands", "Ohio",
        "Oklahoma", "Oregon", "Palau", "Pennsylvania", "Puerto Rico",
        "Rhode Island", "South Carolina", "South Dakota", "Tennessee",
        "Texas", "Utah", "Vermont", "Virgin Island", "Virginia",
        "Washington", "West Virginia", "Wisconsin", "Wyoming",
    };



    bool _drawerOpen = true;


    private async Task<IEnumerable<string>> Search1(string value)
    {
        await Task.Delay(5);

        if (string.IsNullOrEmpty(value))
            return states;
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    private async Task<IEnumerable<string>> Search2(string value)
    {
        await Task.Delay(5);

        if (string.IsNullOrEmpty(value))
            return new string[0];
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
}